apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o templates/
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o templates/
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_HOST_NAME
              valueFrom:
                configMapKeyRef:
                  key: KAFKA_ADVERTISED_HOST_NAME
                  name: production-env
            - name: KAFKA_ADVERTISED_PORT
              valueFrom:
                configMapKeyRef:
                  key: KAFKA_ADVERTISED_PORT
                  name: production-env
            - name: KAFKA_CREATE_TOPICS
              valueFrom:
                configMapKeyRef:
                  key: KAFKA_CREATE_TOPICS
                  name: production-env
            - name: KAFKA_PORT
              valueFrom:
                configMapKeyRef:
                  key: KAFKA_PORT
                  name: production-env
            - name: KAFKA_ZOOKEEPER_CONNECT
              valueFrom:
                configMapKeyRef:
                  key: KAFKA_ZOOKEEPER_CONNECT
                  name: production-env
            - name: PAYMENTS_HOST
              valueFrom:
                configMapKeyRef:
                  key: PAYMENTS_HOST
                  name: production-env
            - name: PAYMENTS_PORT
              valueFrom:
                configMapKeyRef:
                  key: PAYMENTS_PORT
                  name: production-env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: production-env
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: production-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: production-env
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: production-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: production-env
            - name: PRODUCER_HOST
              valueFrom:
                configMapKeyRef:
                  key: PRODUCER_HOST
                  name: production-env
            - name: PRODUCER_PORT
              valueFrom:
                configMapKeyRef:
                  key: PRODUCER_PORT
                  name: production-env
            - name: PROJECT_NAME
              valueFrom:
                configMapKeyRef:
                  key: PROJECT_NAME
                  name: production-env
          image: postgres
          name: postgres
          ports:
            - containerPort: 5432
          resources: {}
      restartPolicy: Always
status: {}
